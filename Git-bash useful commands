Git-bash useful commands
#for setting up the enviornment for network automation on windows

git --version
git clone https://github.com/CiscoDevNet/hello_network                ---> To clone a repository
./<file name>.sh                                                      ---> Executing a shell script
python -V                                                             ---> Default python version
1) py -3 -m venv py_virt1                                             ---> Creating a virtual environment named py_virt1(recommended practice)
2) source py_virt1/Scripts/activate                                   ---> Activating the virtual environment
3) deactivate                                                         ---> deactivates it
node -v                                                               ---> Node.js installed version check
git status                                                            ---> verify what branch you are working on, and the current status of your working tree
git checkout -b mycode                                                ---> to switch between branches(-b option to the checkout command causes Git to create a new branch - and then switch to it.)
git fetch                                                             ---> update your local repo with the updates from the remote repo
git diff                                                              ---> To see what changed in the file
git checkout <file path>                                              ---> Revert the respective file to previous committed state
git reset --hard                                                      ---> Reset your entire working directory to the last commit
git config --global user.name "Your Name"                             ---> Tell git what is your name
git config --global user.email your@email-address.com                 ---> Tell git what is your email address
git add <new or modified file>                                        ---> Stage files to be added to the commit with git add
git commit -m "Commit Message"                                        ---> Commit the files to the repository with a commit message git commit.



Step	Action	Git Commands
1	Clone the Remote Repository	:       git clone <url>
2	Create and Checkout a Local Branch:	git checkout -b <new branch name>
3	Incrementally Commit Changes:       git add <new or modified file>
                                      git commit -m "Commit Message"
